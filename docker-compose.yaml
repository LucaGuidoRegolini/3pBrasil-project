version: "3.7"

networks:
  3pbrasil-net:
    external: true
services:
  authentication:
    restart: always
    build:
      context: ./authentication
      dockerfile: Dockerfile
    container_name: authentication
    environment:
      APP_ENVIRONMENT: PROD
      APP_PORT: 3002
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: authentication
      JWT_SECRET: test
      KAFKA_BROKER: kafka:9092
    networks:
      - 3pbrasil-net
    ports:
      - "3002:3002"
    depends_on:
      - db
  user-crud:
    restart: always
    build:
      context: ./user-crud
      dockerfile: Dockerfile
    container_name: user-crud
    environment:
      APP_ENVIRONMENT: PROD
      APP_PORT: 3001
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      JWT_SECRET: test
      KAFKA_BROKER: kafka:9092
    networks:
      - 3pbrasil-net
    ports:
      - "3001:3001"
    depends_on:
      - db
  db:
    image: postgres
    container_name: 3pbrasil-db
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    networks:
      - 3pbrasil-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kongs_db"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    ports:
      - "5432:5432"
